<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    ">

    <context:property-placeholder location="classpath:properties/application.properties" />
    <context:annotation-config/>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Database Source -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <!--<prop key="hibernate.hbm2ddl.import_files">/sql/setup.sql</prop>-->
            </props>
        </property>
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="de.stekoe.idss.model" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- SMTP Connector -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="username" value="${smtp.user}" />
        <property name="password" value="${smtp.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.from">${smtp.from}</prop>
                <prop key="mail.smtp.host">${smtp.host}</prop>
                <prop key="mail.smtp.port">${smtp.port}</prop>
                <prop key="mail.smtp.auth">${smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${smtp.ssl}</prop>
                <prop key="mail.debug">${smtp.debug}</prop>
            </props>
        </property>
    </bean>

    <bean id="setupBean" class="de.stekoe.idss.setup.DatabaseSetup" />

    <!-- DAOs -->
    <bean id="userDAO" class="de.stekoe.idss.dao.impl.UserDAO" />
    <bean id="systemRoleDAO" class="de.stekoe.idss.dao.impl.SystemRoleDAO" />
    <bean id="projectDAO" class="de.stekoe.idss.dao.impl.ProjectDAO" />
    <bean id="projectRoleDAO" class="de.stekoe.idss.dao.impl.ProjectRoleDAO" />
    <bean id="documentDAO" class="de.stekoe.idss.dao.impl.DocumentDAO" />


    <!-- Services -->
    <bean id="authService" class="de.stekoe.idss.service.impl.DefaultAuthService" />
    <bean id="userService" class="de.stekoe.idss.service.impl.DefaultUserService" />
    <bean id="projectService" class="de.stekoe.idss.service.impl.DefaultProjectService" />
    <bean id="systemRoleService" class="de.stekoe.idss.service.impl.DefaultSystemRoleService" />
    <bean id="projectRoleService" class="de.stekoe.idss.service.impl.DefaultProjectRoleService" />
    <bean id="documentService" class="de.stekoe.idss.service.impl.DefaultDocumentService">
        <property name="documentPath" value="${document.path}" />
    </bean>
    <bean id="mailService" class="de.stekoe.idss.service.impl.DefaultMailService" />
</beans>
