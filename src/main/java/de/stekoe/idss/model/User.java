package de.stekoe.idss.model;

// Generated 26.08.2013 06:13:04 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;

import org.apache.wicket.authroles.authorization.strategies.role.Roles;
import org.hibernate.annotations.GenericGenerator;

/**
 * User generated by hbm2java
 */
@Entity
public class User implements java.io.Serializable {
    private static final long serialVersionUID = -7302539348800293211L;

    @Id
    @GeneratedValue(generator="system-uuid")
    @GenericGenerator(name="system-uuid", strategy = "uuid")
    private String id;

    @OneToOne(cascade=CascadeType.ALL, fetch=FetchType.EAGER)
    private UserProfile userProfile;

    @Column(nullable=false, unique=true)
    private String username;

    @Column(nullable=false, unique=true)
    private String email;

    @Column(nullable=false)
    private String password;

    private String activationKey;

    @ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.EAGER)
    @JoinTable(name="UserRoles")
    private Set<Role> roles = new HashSet<Role>(0);

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public UserProfile getUserProfile() {
        return this.userProfile;
    }

    public void setUserProfile(UserProfile userProfile) {
        this.userProfile = userProfile;
    }

    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getActivationKey() {
        return this.activationKey;
    }

    public void setActivationKey(String activationKey) {
        this.activationKey = activationKey;
    }

    public Set<Role> getRoles() {
        return this.roles;
    }

    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }

    public boolean isAdmin() {
        for (Role role : getRoles()) {
            if(role.getRoleName().equals(Roles.ADMIN))
                return true;
        }

        return false;
    }

    public boolean hasAnyRole(Roles rolesToCheck) {
        for (String roleToCheck : rolesToCheck) {
            for (Role currentRole : getRoles()) {
                if(currentRole.getRoleName().equals(roleToCheck))
                    return true;
            }
        }

        return false;
    }

}
